{
  "version": 3,
  "sources": ["../node_modules/@motionone/utils/dist/array.es.js", "../node_modules/@motionone/utils/dist/clamp.es.js", "../node_modules/@motionone/utils/dist/defaults.es.js", "../node_modules/@motionone/utils/dist/is-number.es.js", "../node_modules/@motionone/utils/dist/is-easing-list.es.js", "../node_modules/@motionone/utils/dist/wrap.es.js", "../node_modules/@motionone/utils/dist/easing.es.js", "../node_modules/@motionone/utils/dist/mix.es.js", "../node_modules/@motionone/utils/dist/noop.es.js", "../node_modules/@motionone/utils/dist/progress.es.js", "../node_modules/@motionone/utils/dist/offset.es.js", "../node_modules/@motionone/utils/dist/interpolate.es.js", "../node_modules/@motionone/utils/dist/is-cubic-bezier.es.js", "../node_modules/@motionone/utils/dist/is-easing-generator.es.js", "../node_modules/@motionone/utils/dist/is-function.es.js", "../node_modules/@motionone/utils/dist/is-string.es.js", "../node_modules/@motionone/utils/dist/time.es.js", "../node_modules/@motionone/easing/dist/cubic-bezier.es.js", "../node_modules/@motionone/easing/dist/steps.es.js", "../node_modules/@motionone/animation/dist/utils/easing.es.js", "../node_modules/@motionone/animation/dist/Animation.es.js", "../node_modules/hey-listen/dist/hey-listen.es.js", "../node_modules/@motionone/types/dist/MotionValue.es.js", "../node_modules/@motionone/dom/dist/animate/data.es.js", "../node_modules/@motionone/dom/dist/animate/utils/transforms.es.js", "../node_modules/@motionone/dom/dist/animate/utils/css-var.es.js", "../node_modules/@motionone/dom/dist/animate/utils/feature-detection.es.js", "../node_modules/@motionone/dom/dist/animate/utils/easing.es.js", "../node_modules/@motionone/dom/dist/animate/utils/keyframes.es.js", "../node_modules/@motionone/dom/dist/animate/utils/get-style-name.es.js", "../node_modules/@motionone/dom/dist/animate/style.es.js", "../node_modules/@motionone/dom/dist/animate/utils/stop-animation.es.js", "../node_modules/@motionone/dom/dist/animate/utils/get-unit.es.js", "../node_modules/@motionone/dom/dist/animate/animate-style.es.js", "../node_modules/@motionone/dom/dist/animate/utils/options.es.js", "../node_modules/@motionone/dom/dist/utils/resolve-elements.es.js", "../node_modules/@motionone/dom/dist/animate/utils/controls.es.js", "../node_modules/@motionone/dom/dist/utils/stagger.es.js", "../node_modules/@motionone/dom/dist/animate/create-animate.es.js", "../node_modules/@motionone/dom/dist/animate/index.es.js", "../node_modules/@motionone/dom/dist/gestures/in-view.es.js", "../node_modules/motion/dist/animate.es.js", "../node_modules/split-type/dist/index.js", "../index.js"],
  "sourcesContent": ["function addUniqueItem(array, item) {\n    array.indexOf(item) === -1 && array.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    index > -1 && arr.splice(index, 1);\n}\n\nexport { addUniqueItem, removeItem };\n", "const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n", "const defaults = {\n    duration: 0.3,\n    delay: 0,\n    endDelay: 0,\n    repeat: 0,\n    easing: \"ease\",\n};\n\nexport { defaults };\n", "const isNumber = (value) => typeof value === \"number\";\n\nexport { isNumber };\n", "import { isNumber } from './is-number.es.js';\n\nconst isEasingList = (easing) => Array.isArray(easing) && !isNumber(easing[0]);\n\nexport { isEasingList };\n", "const wrap = (min, max, v) => {\n    const rangeSize = max - min;\n    return ((((v - min) % rangeSize) + rangeSize) % rangeSize) + min;\n};\n\nexport { wrap };\n", "import { isEasingList } from './is-easing-list.es.js';\nimport { wrap } from './wrap.es.js';\n\nfunction getEasingForSegment(easing, i) {\n    return isEasingList(easing)\n        ? easing[wrap(0, easing.length, i)]\n        : easing;\n}\n\nexport { getEasingForSegment };\n", "const mix = (min, max, progress) => -progress * min + progress * max + min;\n\nexport { mix };\n", "const noop = () => { };\nconst noopReturn = (v) => v;\n\nexport { noop, noopReturn };\n", "const progress = (min, max, value) => max - min === 0 ? 1 : (value - min) / (max - min);\n\nexport { progress };\n", "import { mix } from './mix.es.js';\nimport { progress } from './progress.es.js';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\nfunction defaultOffset(length) {\n    const offset = [0];\n    fillOffset(offset, length - 1);\n    return offset;\n}\n\nexport { defaultOffset, fillOffset };\n", "import { mix } from './mix.es.js';\nimport { noopReturn } from './noop.es.js';\nimport { fillOffset, defaultOffset } from './offset.es.js';\nimport { progress } from './progress.es.js';\nimport { getEasingForSegment } from './easing.es.js';\nimport { clamp } from './clamp.es.js';\n\nfunction interpolate(output, input = defaultOffset(output.length), easing = noopReturn) {\n    const length = output.length;\n    /**\n     * If the input length is lower than the output we\n     * fill the input to match. This currently assumes the input\n     * is an animation progress value so is a good candidate for\n     * moving outside the function.\n     */\n    const remainder = length - input.length;\n    remainder > 0 && fillOffset(input, remainder);\n    return (t) => {\n        let i = 0;\n        for (; i < length - 2; i++) {\n            if (t < input[i + 1])\n                break;\n        }\n        let progressInRange = clamp(0, 1, progress(input[i], input[i + 1], t));\n        const segmentEasing = getEasingForSegment(easing, i);\n        progressInRange = segmentEasing(progressInRange);\n        return mix(output[i], output[i + 1], progressInRange);\n    };\n}\n\nexport { interpolate };\n", "import { isNumber } from './is-number.es.js';\n\nconst isCubicBezier = (easing) => Array.isArray(easing) && isNumber(easing[0]);\n\nexport { isCubicBezier };\n", "const isEasingGenerator = (easing) => typeof easing === \"object\" &&\n    Boolean(easing.createAnimation);\n\nexport { isEasingGenerator };\n", "const isFunction = (value) => typeof value === \"function\";\n\nexport { isFunction };\n", "const isString = (value) => typeof value === \"string\";\n\nexport { isString };\n", "const time = {\n    ms: (seconds) => seconds * 1000,\n    s: (milliseconds) => milliseconds / 1000,\n};\n\nexport { time };\n", "import { noopReturn } from '@motionone/utils';\n\n/*\n  Bezier function generator\n\n  This has been modified from Ga\u00EBtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) * t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noopReturn;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n", "import { clamp } from '@motionone/utils';\n\nconst steps = (steps, direction = \"end\") => (progress) => {\n    progress =\n        direction === \"end\"\n            ? Math.min(progress, 0.999)\n            : Math.max(progress, 0.001);\n    const expanded = progress * steps;\n    const rounded = direction === \"end\" ? Math.floor(expanded) : Math.ceil(expanded);\n    return clamp(0, 1, rounded / steps);\n};\n\nexport { steps };\n", "import { cubicBezier, steps } from '@motionone/easing';\nimport { isFunction, isCubicBezier, noopReturn } from '@motionone/utils';\n\nconst namedEasings = {\n    ease: cubicBezier(0.25, 0.1, 0.25, 1.0),\n    \"ease-in\": cubicBezier(0.42, 0.0, 1.0, 1.0),\n    \"ease-in-out\": cubicBezier(0.42, 0.0, 0.58, 1.0),\n    \"ease-out\": cubicBezier(0.0, 0.0, 0.58, 1.0),\n};\nconst functionArgsRegex = /\\((.*?)\\)/;\nfunction getEasingFunction(definition) {\n    // If already an easing function, return\n    if (isFunction(definition))\n        return definition;\n    // If an easing curve definition, return bezier function\n    if (isCubicBezier(definition))\n        return cubicBezier(...definition);\n    // If we have a predefined easing function, return\n    if (namedEasings[definition])\n        return namedEasings[definition];\n    // If this is a steps function, attempt to create easing curve\n    if (definition.startsWith(\"steps\")) {\n        const args = functionArgsRegex.exec(definition);\n        if (args) {\n            const argsArray = args[1].split(\",\");\n            return steps(parseFloat(argsArray[0]), argsArray[1].trim());\n        }\n    }\n    return noopReturn;\n}\n\nexport { getEasingFunction };\n", "import { noopReturn, defaults, isEasingGenerator, isEasingList, interpolate } from '@motionone/utils';\nimport { getEasingFunction } from './utils/easing.es.js';\n\nclass Animation {\n    constructor(output, keyframes = [0, 1], { easing, duration: initialDuration = defaults.duration, delay = defaults.delay, endDelay = defaults.endDelay, repeat = defaults.repeat, offset, direction = \"normal\", autoplay = true, } = {}) {\n        this.startTime = null;\n        this.rate = 1;\n        this.t = 0;\n        this.cancelTimestamp = null;\n        this.easing = noopReturn;\n        this.duration = 0;\n        this.totalDuration = 0;\n        this.repeat = 0;\n        this.playState = \"idle\";\n        this.finished = new Promise((resolve, reject) => {\n            this.resolve = resolve;\n            this.reject = reject;\n        });\n        easing = easing || defaults.easing;\n        if (isEasingGenerator(easing)) {\n            const custom = easing.createAnimation(keyframes);\n            easing = custom.easing;\n            keyframes = custom.keyframes || keyframes;\n            initialDuration = custom.duration || initialDuration;\n        }\n        this.repeat = repeat;\n        this.easing = isEasingList(easing) ? noopReturn : getEasingFunction(easing);\n        this.updateDuration(initialDuration);\n        const interpolate$1 = interpolate(keyframes, offset, isEasingList(easing) ? easing.map(getEasingFunction) : noopReturn);\n        this.tick = (timestamp) => {\n            var _a;\n            // TODO: Temporary fix for OptionsResolver typing\n            delay = delay;\n            let t = 0;\n            if (this.pauseTime !== undefined) {\n                t = this.pauseTime;\n            }\n            else {\n                t = (timestamp - this.startTime) * this.rate;\n            }\n            this.t = t;\n            // Convert to seconds\n            t /= 1000;\n            // Rebase on delay\n            t = Math.max(t - delay, 0);\n            /**\n             * If this animation has finished, set the current time\n             * to the total duration.\n             */\n            if (this.playState === \"finished\" && this.pauseTime === undefined) {\n                t = this.totalDuration;\n            }\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = t / this.duration;\n            // TODO progress += iterationStart\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            iterationProgress === 1 && currentIteration--;\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const iterationIsOdd = currentIteration % 2;\n            if (direction === \"reverse\" ||\n                (direction === \"alternate\" && iterationIsOdd) ||\n                (direction === \"alternate-reverse\" && !iterationIsOdd)) {\n                iterationProgress = 1 - iterationProgress;\n            }\n            const p = t >= this.totalDuration ? 1 : Math.min(iterationProgress, 1);\n            const latest = interpolate$1(this.easing(p));\n            output(latest);\n            const isAnimationFinished = this.pauseTime === undefined &&\n                (this.playState === \"finished\" || t >= this.totalDuration + endDelay);\n            if (isAnimationFinished) {\n                this.playState = \"finished\";\n                (_a = this.resolve) === null || _a === void 0 ? void 0 : _a.call(this, latest);\n            }\n            else if (this.playState !== \"idle\") {\n                this.frameRequestId = requestAnimationFrame(this.tick);\n            }\n        };\n        if (autoplay)\n            this.play();\n    }\n    play() {\n        const now = performance.now();\n        this.playState = \"running\";\n        if (this.pauseTime !== undefined) {\n            this.startTime = now - this.pauseTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = now;\n        }\n        this.cancelTimestamp = this.startTime;\n        this.pauseTime = undefined;\n        this.frameRequestId = requestAnimationFrame(this.tick);\n    }\n    pause() {\n        this.playState = \"paused\";\n        this.pauseTime = this.t;\n    }\n    finish() {\n        this.playState = \"finished\";\n        this.tick(0);\n    }\n    stop() {\n        var _a;\n        this.playState = \"idle\";\n        if (this.frameRequestId !== undefined) {\n            cancelAnimationFrame(this.frameRequestId);\n        }\n        (_a = this.reject) === null || _a === void 0 ? void 0 : _a.call(this, false);\n    }\n    cancel() {\n        this.stop();\n        this.tick(this.cancelTimestamp);\n    }\n    reverse() {\n        this.rate *= -1;\n    }\n    commitStyles() { }\n    updateDuration(duration) {\n        this.duration = duration;\n        this.totalDuration = duration * (this.repeat + 1);\n    }\n    get currentTime() {\n        return this.t;\n    }\n    set currentTime(t) {\n        if (this.pauseTime !== undefined || this.rate === 0) {\n            this.pauseTime = t;\n        }\n        else {\n            this.startTime = performance.now() - t / this.rate;\n        }\n    }\n    get playbackRate() {\n        return this.rate;\n    }\n    set playbackRate(rate) {\n        this.rate = rate;\n    }\n}\n\nexport { Animation };\n", "var warning = function () { };\r\nvar invariant = function () { };\r\nif (process.env.NODE_ENV !== 'production') {\r\n    warning = function (check, message) {\r\n        if (!check && typeof console !== 'undefined') {\r\n            console.warn(message);\r\n        }\r\n    };\r\n    invariant = function (check, message) {\r\n        if (!check) {\r\n            throw new Error(message);\r\n        }\r\n    };\r\n}\n\nexport { invariant, warning };\n", "/**\n * The MotionValue tracks the state of a single animatable\n * value. Currently, updatedAt and current are unused. The\n * long term idea is to use this to minimise the number\n * of DOM reads, and to abstract the DOM interactions here.\n */\nclass MotionValue {\n    setAnimation(animation) {\n        this.animation = animation;\n        animation === null || animation === void 0 ? void 0 : animation.finished.then(() => this.clearAnimation()).catch(() => { });\n    }\n    clearAnimation() {\n        this.animation = this.generator = undefined;\n    }\n}\n\nexport { MotionValue };\n", "import { MotionValue } from '@motionone/types';\n\nconst data = new WeakMap();\nfunction getAnimationData(element) {\n    if (!data.has(element)) {\n        data.set(element, {\n            transforms: [],\n            values: new Map(),\n        });\n    }\n    return data.get(element);\n}\nfunction getMotionValue(motionValues, name) {\n    if (!motionValues.has(name)) {\n        motionValues.set(name, new MotionValue());\n    }\n    return motionValues.get(name);\n}\n\nexport { getAnimationData, getMotionValue };\n", "import { noopReturn, addUniqueItem } from '@motionone/utils';\nimport { getAnimationData } from '../data.es.js';\n\n/**\n * A list of all transformable axes. We'll use this list to generated a version\n * of each axes for each transform.\n */\nconst axes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * An ordered array of each transformable value. By default, transform values\n * will be sorted to this order.\n */\nconst order = [\"translate\", \"scale\", \"rotate\", \"skew\"];\nconst transformAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n};\nconst rotation = {\n    syntax: \"<angle>\",\n    initialValue: \"0deg\",\n    toDefaultUnit: (v) => v + \"deg\",\n};\nconst baseTransformProperties = {\n    translate: {\n        syntax: \"<length-percentage>\",\n        initialValue: \"0px\",\n        toDefaultUnit: (v) => v + \"px\",\n    },\n    rotate: rotation,\n    scale: {\n        syntax: \"<number>\",\n        initialValue: 1,\n        toDefaultUnit: noopReturn,\n    },\n    skew: rotation,\n};\nconst transformDefinitions = new Map();\nconst asTransformCssVar = (name) => `--motion-${name}`;\n/**\n * Generate a list of every possible transform key\n */\nconst transforms = [\"x\", \"y\", \"z\"];\norder.forEach((name) => {\n    axes.forEach((axis) => {\n        transforms.push(name + axis);\n        transformDefinitions.set(asTransformCssVar(name + axis), baseTransformProperties[name]);\n    });\n});\n/**\n * A function to use with Array.sort to sort transform keys by their default order.\n */\nconst compareTransformOrder = (a, b) => transforms.indexOf(a) - transforms.indexOf(b);\n/**\n * Provide a quick way to check if a string is the name of a transform\n */\nconst transformLookup = new Set(transforms);\nconst isTransform = (name) => transformLookup.has(name);\nconst addTransformToElement = (element, name) => {\n    // Map x to translateX etc\n    if (transformAlias[name])\n        name = transformAlias[name];\n    const { transforms } = getAnimationData(element);\n    addUniqueItem(transforms, name);\n    /**\n     * TODO: An optimisation here could be to cache the transform in element data\n     * and only update if this has changed.\n     */\n    element.style.transform = buildTransformTemplate(transforms);\n};\nconst buildTransformTemplate = (transforms) => transforms\n    .sort(compareTransformOrder)\n    .reduce(transformListToString, \"\")\n    .trim();\nconst transformListToString = (template, name) => `${template} ${name}(var(${asTransformCssVar(name)}))`;\n\nexport { addTransformToElement, asTransformCssVar, axes, buildTransformTemplate, compareTransformOrder, isTransform, transformAlias, transformDefinitions };\n", "import { transformDefinitions } from './transforms.es.js';\n\nconst isCssVar = (name) => name.startsWith(\"--\");\nconst registeredProperties = new Set();\nfunction registerCssVariable(name) {\n    if (registeredProperties.has(name))\n        return;\n    registeredProperties.add(name);\n    try {\n        const { syntax, initialValue } = transformDefinitions.has(name)\n            ? transformDefinitions.get(name)\n            : {};\n        CSS.registerProperty({\n            name,\n            inherits: false,\n            syntax,\n            initialValue,\n        });\n    }\n    catch (e) { }\n}\n\nexport { isCssVar, registerCssVariable, registeredProperties };\n", "const testAnimation = (keyframes, options) => document.createElement(\"div\").animate(keyframes, options);\nconst featureTests = {\n    cssRegisterProperty: () => typeof CSS !== \"undefined\" &&\n        Object.hasOwnProperty.call(CSS, \"registerProperty\"),\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n    partialKeyframes: () => {\n        try {\n            testAnimation({ opacity: [1] });\n        }\n        catch (e) {\n            return false;\n        }\n        return true;\n    },\n    finished: () => Boolean(testAnimation({ opacity: [0, 1] }, { duration: 0.001 }).finished),\n    linearEasing: () => {\n        try {\n            testAnimation({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n        }\n        catch (e) {\n            return false;\n        }\n        return true;\n    },\n};\nconst results = {};\nconst supports = {};\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n", "import { isFunction, defaults, isCubicBezier, progress } from '@motionone/utils';\nimport { supports } from './feature-detection.es.js';\n\n// Create a linear easing point for every x second\nconst resolution = 0.015;\nconst generateLinearEasingPoints = (easing, duration) => {\n    let points = \"\";\n    const numPoints = Math.round(duration / resolution);\n    for (let i = 0; i < numPoints; i++) {\n        points += easing(progress(0, numPoints - 1, i)) + \", \";\n    }\n    return points.substring(0, points.length - 2);\n};\nconst convertEasing = (easing, duration) => {\n    if (isFunction(easing)) {\n        return supports.linearEasing()\n            ? `linear(${generateLinearEasingPoints(easing, duration)})`\n            : defaults.easing;\n    }\n    else {\n        return isCubicBezier(easing) ? cubicBezierAsString(easing) : easing;\n    }\n};\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\n\nexport { convertEasing, cubicBezierAsString, generateLinearEasingPoints };\n", "function hydrateKeyframes(keyframes, readInitialValue) {\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] === null) {\n            keyframes[i] = i ? keyframes[i - 1] : readInitialValue();\n        }\n    }\n    return keyframes;\n}\nconst keyframesList = (keyframes) => Array.isArray(keyframes) ? keyframes : [keyframes];\n\nexport { hydrateKeyframes, keyframesList };\n", "import { isTransform, asTransformCssVar, transformAlias } from './transforms.es.js';\n\nfunction getStyleName(key) {\n    if (transformAlias[key])\n        key = transformAlias[key];\n    return isTransform(key) ? asTransformCssVar(key) : key;\n}\n\nexport { getStyleName };\n", "import { isCssVar } from './utils/css-var.es.js';\nimport { getStyleName } from './utils/get-style-name.es.js';\nimport { transformDefinitions } from './utils/transforms.es.js';\n\nconst style = {\n    get: (element, name) => {\n        name = getStyleName(name);\n        let value = isCssVar(name)\n            ? element.style.getPropertyValue(name)\n            : getComputedStyle(element)[name];\n        if (!value && value !== 0) {\n            const definition = transformDefinitions.get(name);\n            if (definition)\n                value = definition.initialValue;\n        }\n        return value;\n    },\n    set: (element, name, value) => {\n        name = getStyleName(name);\n        if (isCssVar(name)) {\n            element.style.setProperty(name, value);\n        }\n        else {\n            element.style[name] = value;\n        }\n    },\n};\n\nexport { style };\n", "function stopAnimation(animation, needsCommit = true) {\n    if (!animation || animation.playState === \"finished\")\n        return;\n    // Suppress error thrown by WAAPI\n    try {\n        if (animation.stop) {\n            animation.stop();\n        }\n        else {\n            needsCommit && animation.commitStyles();\n            animation.cancel();\n        }\n    }\n    catch (e) { }\n}\n\nexport { stopAnimation };\n", "import { noopReturn, isString } from '@motionone/utils';\n\nfunction getUnitConverter(keyframes, definition) {\n    var _a;\n    let toUnit = (definition === null || definition === void 0 ? void 0 : definition.toDefaultUnit) || noopReturn;\n    const finalKeyframe = keyframes[keyframes.length - 1];\n    if (isString(finalKeyframe)) {\n        const unit = ((_a = finalKeyframe.match(/(-?[\\d.]+)([a-z%]*)/)) === null || _a === void 0 ? void 0 : _a[2]) || \"\";\n        if (unit)\n            toUnit = (value) => value + unit;\n    }\n    return toUnit;\n}\n\nexport { getUnitConverter };\n", "import { getAnimationData, getMotionValue } from './data.es.js';\nimport { isCssVar, registerCssVariable } from './utils/css-var.es.js';\nimport { defaults, isEasingGenerator, isFunction, isEasingList, isNumber, time, noop } from '@motionone/utils';\nimport { isTransform, addTransformToElement, transformDefinitions } from './utils/transforms.es.js';\nimport { convertEasing } from './utils/easing.es.js';\nimport { supports } from './utils/feature-detection.es.js';\nimport { hydrateKeyframes, keyframesList } from './utils/keyframes.es.js';\nimport { style } from './style.es.js';\nimport { getStyleName } from './utils/get-style-name.es.js';\nimport { stopAnimation } from './utils/stop-animation.es.js';\nimport { getUnitConverter } from './utils/get-unit.es.js';\n\nfunction getDevToolsRecord() {\n    return window.__MOTION_DEV_TOOLS_RECORD;\n}\nfunction animateStyle(element, key, keyframesDefinition, options = {}, AnimationPolyfill) {\n    const record = getDevToolsRecord();\n    const isRecording = options.record !== false && record;\n    let animation;\n    let { duration = defaults.duration, delay = defaults.delay, endDelay = defaults.endDelay, repeat = defaults.repeat, easing = defaults.easing, persist = false, direction, offset, allowWebkitAcceleration = false, autoplay = true, } = options;\n    const data = getAnimationData(element);\n    const valueIsTransform = isTransform(key);\n    let canAnimateNatively = supports.waapi();\n    /**\n     * If this is an individual transform, we need to map its\n     * key to a CSS variable and update the element's transform style\n     */\n    valueIsTransform && addTransformToElement(element, key);\n    const name = getStyleName(key);\n    const motionValue = getMotionValue(data.values, name);\n    /**\n     * Get definition of value, this will be used to convert numerical\n     * keyframes into the default value type.\n     */\n    const definition = transformDefinitions.get(name);\n    /**\n     * Stop the current animation, if any. Because this will trigger\n     * commitStyles (DOM writes) and we might later trigger DOM reads,\n     * this is fired now and we return a factory function to create\n     * the actual animation that can get called in batch,\n     */\n    stopAnimation(motionValue.animation, !(isEasingGenerator(easing) && motionValue.generator) &&\n        options.record !== false);\n    /**\n     * Batchable factory function containing all DOM reads.\n     */\n    return () => {\n        const readInitialValue = () => { var _a, _b; return (_b = (_a = style.get(element, name)) !== null && _a !== void 0 ? _a : definition === null || definition === void 0 ? void 0 : definition.initialValue) !== null && _b !== void 0 ? _b : 0; };\n        /**\n         * Replace null values with the previous keyframe value, or read\n         * it from the DOM if it's the first keyframe.\n         */\n        let keyframes = hydrateKeyframes(keyframesList(keyframesDefinition), readInitialValue);\n        /**\n         * Detect unit type of keyframes.\n         */\n        const toUnit = getUnitConverter(keyframes, definition);\n        if (isEasingGenerator(easing)) {\n            const custom = easing.createAnimation(keyframes, key !== \"opacity\", readInitialValue, name, motionValue);\n            easing = custom.easing;\n            keyframes = custom.keyframes || keyframes;\n            duration = custom.duration || duration;\n        }\n        /**\n         * If this is a CSS variable we need to register it with the browser\n         * before it can be animated natively. We also set it with setProperty\n         * rather than directly onto the element.style object.\n         */\n        if (isCssVar(name)) {\n            if (supports.cssRegisterProperty()) {\n                registerCssVariable(name);\n            }\n            else {\n                canAnimateNatively = false;\n            }\n        }\n        /**\n         * If we've been passed a custom easing function, and this browser\n         * does **not** support linear() easing, and the value is a transform\n         * (and thus a pure number) we can still support the custom easing\n         * by falling back to the animation polyfill.\n         */\n        if (valueIsTransform &&\n            !supports.linearEasing() &&\n            (isFunction(easing) || (isEasingList(easing) && easing.some(isFunction)))) {\n            canAnimateNatively = false;\n        }\n        /**\n         * If we can animate this value with WAAPI, do so.\n         */\n        if (canAnimateNatively) {\n            /**\n             * Convert numbers to default value types. Currently this only supports\n             * transforms but it could also support other value types.\n             */\n            if (definition) {\n                keyframes = keyframes.map((value) => isNumber(value) ? definition.toDefaultUnit(value) : value);\n            }\n            /**\n             * If this browser doesn't support partial/implicit keyframes we need to\n             * explicitly provide one.\n             */\n            if (keyframes.length === 1 &&\n                (!supports.partialKeyframes() || isRecording)) {\n                keyframes.unshift(readInitialValue());\n            }\n            const animationOptions = {\n                delay: time.ms(delay),\n                duration: time.ms(duration),\n                endDelay: time.ms(endDelay),\n                easing: !isEasingList(easing)\n                    ? convertEasing(easing, duration)\n                    : undefined,\n                direction,\n                iterations: repeat + 1,\n                fill: \"both\",\n            };\n            animation = element.animate({\n                [name]: keyframes,\n                offset,\n                easing: isEasingList(easing)\n                    ? easing.map((thisEasing) => convertEasing(thisEasing, duration))\n                    : undefined,\n            }, animationOptions);\n            /**\n             * Polyfill finished Promise in browsers that don't support it\n             */\n            if (!animation.finished) {\n                animation.finished = new Promise((resolve, reject) => {\n                    animation.onfinish = resolve;\n                    animation.oncancel = reject;\n                });\n            }\n            const target = keyframes[keyframes.length - 1];\n            animation.finished\n                .then(() => {\n                if (persist)\n                    return;\n                // Apply styles to target\n                style.set(element, name, target);\n                // Ensure fill modes don't persist\n                animation.cancel();\n            })\n                .catch(noop);\n            /**\n             * This forces Webkit to run animations on the main thread by exploiting\n             * this condition:\n             * https://trac.webkit.org/browser/webkit/trunk/Source/WebCore/platform/graphics/ca/GraphicsLayerCA.cpp?rev=281238#L1099\n             *\n             * This fixes Webkit's timing bugs, like accelerated animations falling\n             * out of sync with main thread animations and massive delays in starting\n             * accelerated animations in WKWebView.\n             */\n            if (!allowWebkitAcceleration)\n                animation.playbackRate = 1.000001;\n            /**\n             * If we can't animate the value natively then we can fallback to the numbers-only\n             * polyfill for transforms.\n             */\n        }\n        else if (AnimationPolyfill && valueIsTransform) {\n            /**\n             * If any keyframe is a string (because we measured it from the DOM), we need to convert\n             * it into a number before passing to the Animation polyfill.\n             */\n            keyframes = keyframes.map((value) => typeof value === \"string\" ? parseFloat(value) : value);\n            /**\n             * If we only have a single keyframe, we need to create an initial keyframe by reading\n             * the current value from the DOM.\n             */\n            if (keyframes.length === 1) {\n                keyframes.unshift(parseFloat(readInitialValue()));\n            }\n            animation = new AnimationPolyfill((latest) => {\n                style.set(element, name, toUnit ? toUnit(latest) : latest);\n            }, keyframes, Object.assign(Object.assign({}, options), { duration,\n                easing }));\n        }\n        else {\n            const target = keyframes[keyframes.length - 1];\n            style.set(element, name, definition && isNumber(target)\n                ? definition.toDefaultUnit(target)\n                : target);\n        }\n        if (isRecording) {\n            record(element, key, keyframes, {\n                duration,\n                delay: delay,\n                easing,\n                repeat,\n                offset,\n            }, \"motion-one\");\n        }\n        motionValue.setAnimation(animation);\n        if (animation && !autoplay)\n            animation.pause();\n        return animation;\n    };\n}\n\nexport { animateStyle };\n", "const getOptions = (options, key) => \n/**\n * TODO: Make test for this\n * Always return a new object otherwise delay is overwritten by results of stagger\n * and this results in no stagger\n */\noptions[key] ? Object.assign(Object.assign({}, options), options[key]) : Object.assign({}, options);\n\nexport { getOptions };\n", "function resolveElements(elements, selectorCache) {\n    var _a;\n    if (typeof elements === \"string\") {\n        if (selectorCache) {\n            (_a = selectorCache[elements]) !== null && _a !== void 0 ? _a : (selectorCache[elements] = document.querySelectorAll(elements));\n            elements = selectorCache[elements];\n        }\n        else {\n            elements = document.querySelectorAll(elements);\n        }\n    }\n    else if (elements instanceof Element) {\n        elements = [elements];\n    }\n    /**\n     * Return an empty array\n     */\n    return Array.from(elements || []);\n}\n\nexport { resolveElements };\n", "import { defaults, noop, time } from '@motionone/utils';\nimport { stopAnimation } from './stop-animation.es.js';\n\nconst createAnimation = (factory) => factory();\nconst withControls = (animationFactory, options, duration = defaults.duration) => {\n    return new Proxy({\n        animations: animationFactory.map(createAnimation).filter(Boolean),\n        duration,\n        options,\n    }, controls);\n};\n/**\n * TODO:\n * Currently this returns the first animation, ideally it would return\n * the first active animation.\n */\nconst getActiveAnimation = (state) => state.animations[0];\nconst controls = {\n    get: (target, key) => {\n        const activeAnimation = getActiveAnimation(target);\n        switch (key) {\n            case \"duration\":\n                return target.duration;\n            case \"currentTime\":\n                return time.s((activeAnimation === null || activeAnimation === void 0 ? void 0 : activeAnimation[key]) || 0);\n            case \"playbackRate\":\n            case \"playState\":\n                return activeAnimation === null || activeAnimation === void 0 ? void 0 : activeAnimation[key];\n            case \"finished\":\n                if (!target.finished) {\n                    target.finished = Promise.all(target.animations.map(selectFinished)).catch(noop);\n                }\n                return target.finished;\n            case \"stop\":\n                return () => {\n                    target.animations.forEach((animation) => stopAnimation(animation));\n                };\n            case \"forEachNative\":\n                /**\n                 * This is for internal use only, fire a callback for each\n                 * underlying animation.\n                 */\n                return (callback) => {\n                    target.animations.forEach((animation) => callback(animation, target));\n                };\n            default:\n                return typeof (activeAnimation === null || activeAnimation === void 0 ? void 0 : activeAnimation[key]) === \"undefined\"\n                    ? undefined\n                    : () => target.animations.forEach((animation) => animation[key]());\n        }\n    },\n    set: (target, key, value) => {\n        switch (key) {\n            case \"currentTime\":\n                value = time.ms(value);\n            // Fall-through\n            case \"playbackRate\":\n                for (let i = 0; i < target.animations.length; i++) {\n                    target.animations[i][key] = value;\n                }\n                return true;\n        }\n        return false;\n    },\n};\nconst selectFinished = (animation) => animation.finished;\n\nexport { controls, withControls };\n", "import { isNumber, isFunction } from '@motionone/utils';\nimport { getEasingFunction } from '@motionone/animation';\n\nfunction stagger(duration = 0.1, { start = 0, from = 0, easing } = {}) {\n    return (i, total) => {\n        const fromIndex = isNumber(from) ? from : getFromIndex(from, total);\n        const distance = Math.abs(fromIndex - i);\n        let delay = duration * distance;\n        if (easing) {\n            const maxDelay = total * duration;\n            const easingFunction = getEasingFunction(easing);\n            delay = easingFunction(delay / maxDelay) * maxDelay;\n        }\n        return start + delay;\n    };\n}\nfunction getFromIndex(from, total) {\n    if (from === \"first\") {\n        return 0;\n    }\n    else {\n        const lastIndex = total - 1;\n        return from === \"last\" ? lastIndex : lastIndex / 2;\n    }\n}\nfunction resolveOption(option, i, total) {\n    return isFunction(option) ? option(i, total) : option;\n}\n\nexport { getFromIndex, resolveOption, stagger };\n", "import { invariant } from 'hey-listen';\nimport { animateStyle } from './animate-style.es.js';\nimport { getOptions } from './utils/options.es.js';\nimport { resolveElements } from '../utils/resolve-elements.es.js';\nimport { withControls } from './utils/controls.es.js';\nimport { resolveOption } from '../utils/stagger.es.js';\n\nfunction createAnimate(AnimatePolyfill) {\n    return function animate(elements, keyframes, options = {}) {\n        elements = resolveElements(elements);\n        const numElements = elements.length;\n        invariant(Boolean(numElements), \"No valid element provided.\");\n        invariant(Boolean(keyframes), \"No keyframes defined.\");\n        /**\n         * Create and start new animations\n         */\n        const animationFactories = [];\n        for (let i = 0; i < numElements; i++) {\n            const element = elements[i];\n            for (const key in keyframes) {\n                const valueOptions = getOptions(options, key);\n                valueOptions.delay = resolveOption(valueOptions.delay, i, numElements);\n                const animation = animateStyle(element, key, keyframes[key], valueOptions, AnimatePolyfill);\n                animationFactories.push(animation);\n            }\n        }\n        return withControls(animationFactories, options, \n        /**\n         * TODO:\n         * If easing is set to spring or glide, duration will be dynamically\n         * generated. Ideally we would dynamically generate this from\n         * animation.effect.getComputedTiming().duration but this isn't\n         * supported in iOS13 or our number polyfill. Perhaps it's possible\n         * to Proxy animations returned from animateStyle that has duration\n         * as a getter.\n         */\n        options.duration);\n    };\n}\n\nexport { createAnimate };\n", "import { Animation } from '@motionone/animation';\nimport { createAnimate } from './create-animate.es.js';\n\nconst animate = createAnimate(Animation);\n\nexport { animate };\n", "import { resolveElements } from '../utils/resolve-elements.es.js';\nimport { isFunction } from '@motionone/utils';\n\nconst thresholds = {\n    any: 0,\n    all: 1,\n};\nfunction inView(elementOrSelector, onStart, { root, margin: rootMargin, amount = \"any\" } = {}) {\n    /**\n     * If this browser doesn't support IntersectionObserver, return a dummy stop function.\n     * Default triggering of onStart is tricky - it could be used for starting/stopping\n     * videos, lazy loading content etc. We could provide an option to enable a fallback, or\n     * provide a fallback callback option.\n     */\n    if (typeof IntersectionObserver === \"undefined\") {\n        return () => { };\n    }\n    const elements = resolveElements(elementOrSelector);\n    const activeIntersections = new WeakMap();\n    const onIntersectionChange = (entries) => {\n        entries.forEach((entry) => {\n            const onEnd = activeIntersections.get(entry.target);\n            /**\n             * If there's no change to the intersection, we don't need to\n             * do anything here.\n             */\n            if (entry.isIntersecting === Boolean(onEnd))\n                return;\n            if (entry.isIntersecting) {\n                const newOnEnd = onStart(entry);\n                if (isFunction(newOnEnd)) {\n                    activeIntersections.set(entry.target, newOnEnd);\n                }\n                else {\n                    observer.unobserve(entry.target);\n                }\n            }\n            else if (onEnd) {\n                onEnd(entry);\n                activeIntersections.delete(entry.target);\n            }\n        });\n    };\n    const observer = new IntersectionObserver(onIntersectionChange, {\n        root,\n        rootMargin,\n        threshold: typeof amount === \"number\" ? amount : thresholds[amount],\n    });\n    elements.forEach((element) => observer.observe(element));\n    return () => observer.disconnect();\n}\n\nexport { inView };\n", "import { animate as animate$1, withControls } from '@motionone/dom';\nimport { isFunction } from '@motionone/utils';\nimport { Animation } from '@motionone/animation';\n\nfunction animateProgress(target, options = {}) {\n    return withControls([\n        () => {\n            const animation = new Animation(target, [0, 1], options);\n            animation.finished.catch(() => { });\n            return animation;\n        },\n    ], options, options.duration);\n}\nfunction animate(target, keyframesOrOptions, options) {\n    const factory = isFunction(target) ? animateProgress : animate$1;\n    return factory(target, keyframesOrOptions, options);\n}\n\nexport { animate, animateProgress };\n", "/**\n * SplitType\n * https://github.com/lukePeavey/SplitType\n * @version 0.3.4\n * @author Luke Peavey <lwpeavey@gmail.com>\n */\n\n// Polyfill the following DOM methods that are not supported in IE 11.\n\n(function () {\n  function append() {\n    var length = arguments.length;\n\n    for (var i = 0; i < length; i++) {\n      var node = i < 0 || arguments.length <= i ? undefined : arguments[i];\n      if (node.nodeType === 1 || node.nodeType === 11) this.appendChild(node);else this.appendChild(document.createTextNode(String(node)));\n    }\n  }\n\n  function replaceChildren() {\n    while (this.lastChild) {\n      this.removeChild(this.lastChild);\n    }\n\n    if (arguments.length) this.append.apply(this, arguments);\n  }\n\n  function replaceWith() {\n    var parent = this.parentNode;\n\n    for (var _len = arguments.length, nodes = new Array(_len), _key = 0; _key < _len; _key++) {\n      nodes[_key] = arguments[_key];\n    }\n\n    var i = nodes.length;\n    if (!parent) return;\n    if (!i) parent.removeChild(this);\n\n    while (i--) {\n      var node = nodes[i];\n\n      if (typeof node !== 'object') {\n        node = this.ownerDocument.createTextNode(node);\n      } else if (node.parentNode) {\n        node.parentNode.removeChild(node);\n      }\n\n      if (!i) {\n        parent.replaceChild(node, this);\n      } else {\n        parent.insertBefore(this.previousSibling, node);\n      }\n    }\n  }\n\n  if (typeof Element !== 'undefined') {\n    if (!Element.prototype.append) {\n      Element.prototype.append = append;\n      DocumentFragment.prototype.append = append;\n    }\n\n    if (!Element.prototype.replaceChildren) {\n      Element.prototype.replaceChildren = replaceChildren;\n      DocumentFragment.prototype.replaceChildren = replaceChildren;\n    }\n\n    if (!Element.prototype.replaceWith) {\n      Element.prototype.replaceWith = replaceWith;\n      DocumentFragment.prototype.replaceWith = replaceWith;\n    }\n  }\n})();\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n  return arr2;\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n/**\n * Shallow merges the properties of an object with the target object. Only\n * includes properties that exist on the target object. Non-writable properties\n * on the target object will not be over-written.\n *\n * @param {Object} target\n * @param {Object} object\n */\nfunction extend(target, object) {\n  return Object.getOwnPropertyNames(Object(target)).reduce(function (extended, key) {\n    var currentValue = Object.getOwnPropertyDescriptor(Object(target), key);\n    var newValue = Object.getOwnPropertyDescriptor(Object(object), key);\n    return Object.defineProperty(extended, key, newValue || currentValue);\n  }, {});\n}\n\n/**\n * Checks if given value is a string\n *\n * @param {any} value\n * @return {boolean} `true` if `value` is a string, else `false`\n */\nfunction isString(value) {\n  return typeof value === 'string';\n}\n\nfunction isArray(value) {\n  return Array.isArray(value);\n}\n\n/**\n * Parses user supplied settings objects.\n */\n\nfunction parseSettings() {\n  var settings = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var object = extend(settings); // `split` may be used as an alias for the `types` option\n  // Parse the `types` settings into an array of valid split types.\n  // If `types` is explicitly set to an empty string or array, text will not be\n  // split at all.\n\n  var types;\n\n  if (object.types !== undefined) {\n    types = object.types;\n  } else if (object.split !== undefined) {\n    types = object.split;\n  }\n\n  if (types !== undefined) {\n    object.types = (isString(types) || isArray(types) ? String(types) : '').split(',').map(function (type) {\n      return String(type).trim();\n    }).filter(function (type) {\n      return /((line)|(word)|(char))/i.test(type);\n    });\n  } // Support `position: absolute` as an alias for `absolute: true`\n\n\n  if (object.absolute || object.position) {\n    object.absolute = object.absolute || /absolute/.test(settings.position);\n  }\n\n  return object;\n}\n\n/**\n * Takes a list of `types` and returns an object\n *\n * @param {string | string[]} value a comma separated list of split types\n * @return {{lines: boolean, words: boolean, chars: boolean}}\n */\n\nfunction parseTypes(value) {\n  var types = isString(value) || isArray(value) ? String(value) : '';\n  return {\n    none: !types,\n    lines: /line/i.test(types),\n    words: /word/i.test(types),\n    chars: /char/i.test(types)\n  };\n}\n\n/**\n * Returns true if `value` is a non-null object.\n * @param {any} value\n * @return {boolean}\n */\nfunction isObject(value) {\n  return value !== null && typeof value === 'object';\n}\n\n/**\n * Returns true if `input` is one of the following:\n * - `Element`\n * - `Text`\n * - `DocumentFragment`\n */\n\nfunction isNode(input) {\n  return isObject(input) && /^(1|3|11)$/.test(input.nodeType);\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n * Original source: Lodash\n *\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3)\n * // => true\n *\n * _.isLength(Number.MIN_VALUE)\n * // => false\n *\n * _.isLength(Infinity)\n * // => false\n *\n * _.isLength('3')\n * // => false\n */\n\nfunction isLength(value) {\n  return typeof value === 'number' && value > -1 && value % 1 === 0;\n}\n/**\n * Checks if `value` is an array-like object\n * @param {any} value\n * @return {boolean} true if `value` is array-like`, else `false`\n * @example\n * isArrayLike(new Array())\n * // => true\n *\n * isArrayLike(document.querySelectorAll('div'))\n * // => true\n *\n * isArrayLike(document.getElementsByTagName('div'))\n * // => true\n *\n * isArrayLike(() => {})\n * // => false\n *\n * isArrayLike({foo: 'bar'})\n * // => false\n *\n * * isArrayLike(null)\n * // => false\n */\n\n\nfunction isArrayLike(value) {\n  return isObject(value) && isLength(value.length);\n}\n\n/**\n * Coerces `value` to an `Array`.\n *\n * @param {any} value\n * @return {any[]}\n * @example\n * // If `value` is any `Array`, returns original `Array`\n * let arr = [1, 2]\n * toArray(arr)\n * // => arr\n *\n * // If `value` is an `ArrayLike`, its equivalent to `Array.from(value)`\n * let nodeList = document.querySelectorAll('div')\n * toArray(nodeList)\n * // => HTMLElement[] s\n *\n * // If value is falsy, returns empty array\n * toArray(null)\n * // => []\n *\n * // For any other type of value, its equivalent to `Array.of(value)`\n * let element = document.createElement('div')\n * toArray(element)\n * // => [element]\n *\n */\n\nfunction toArray(value) {\n  if (isArray(value)) return value;\n  if (value == null) return [];\n  return isArrayLike(value) ? Array.prototype.slice.call(value) : [value];\n}\n\n/**\n * Processes target elements for the splitType function.\n *\n * @param {any} target Can be one of the following:\n * 1. `string` - A css selector\n * 2. `HTMLElement` - A single element\n * 3. `NodeList` - A nodeList\n * 4. `Element[]` - An array of elements\n * 5. `Array<NodeList|Element[]>` - An nested array of elements\n * @returns {Element[]} A flat array HTML elements\n * @return A flat array of elements or empty array if no elements are found\n */\n\nfunction getTargetElements(target) {\n  var elements = target; // If `target` is a selector string...\n\n  if (isString(target)) {\n    if (/^(#[a-z]\\w+)$/.test(target.trim())) {\n      // If `target` is an ID, use `getElementById`\n      elements = document.getElementById(target.trim().slice(1));\n    } else {\n      // Else use `querySelectorAll`\n      elements = document.querySelectorAll(target);\n    }\n  } // Return a flattened array of elements\n\n\n  return toArray(elements).reduce(function (result, element) {\n    return [].concat(_toConsumableArray(result), _toConsumableArray(toArray(element).filter(isNode)));\n  }, []);\n}\n\nvar entries = Object.entries;\n\nvar expando = \"_splittype\";\nvar cache = {};\nvar uid = 0;\n/**\n * Stores data associated with DOM elements or other objects. This is a\n * simplified version of jQuery's data method.\n *\n * @signature Data(owner)\n * @description Get the data store object for the given owner.\n * @param {Object} owner the object that data will be associated with.\n * @return {Object} the data object for given `owner`. If no data exists\n *     for the given object, creates a new data store and returns it.\n *\n * @signature Data(owner, key)\n * @description Get the value\n * @param {Object} owner\n * @param {string} key\n * @return {any} the value of the provided key. If key does not exist, returns\n *     undefined.\n *\n * @signature Data(owner, key, value)\n * @description Sets the given key/value pair in data store\n * @param {Object} owner\n * @param {string} key\n * @param {any} value\n */\n\nfunction set(owner, key, value) {\n  if (!isObject(owner)) {\n    console.warn('[data.set] owner is not an object');\n    return null;\n  }\n\n  var id = owner[expando] || (owner[expando] = ++uid);\n  var data = cache[id] || (cache[id] = {});\n\n  if (value === undefined) {\n    if (!!key && Object.getPrototypeOf(key) === Object.prototype) {\n      cache[id] = _objectSpread2(_objectSpread2({}, data), key);\n    }\n  } else if (key !== undefined) {\n    data[key] = value;\n  }\n\n  return value;\n}\nfunction get(owner, key) {\n  var id = isObject(owner) ? owner[expando] : null;\n  var data = id && cache[id] || {};\n\n  if (key === undefined) {\n    return data;\n  }\n\n  return data[key];\n}\n/**\n * Remove all data associated with the given element\n */\n\nfunction remove(element) {\n  var id = element && element[expando];\n\n  if (id) {\n    delete element[id];\n    delete cache[id];\n  }\n}\n/**\n * Clear all cached data\n */\n\nfunction clear() {\n  Object.keys(cache).forEach(function (key) {\n    delete cache[key];\n  });\n}\n/**\n * Remove all temporary data from the store.\n */\n\nfunction cleanup() {\n  entries(cache).forEach(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        id = _ref2[0],\n        _ref2$ = _ref2[1],\n        isRoot = _ref2$.isRoot,\n        isSplit = _ref2$.isSplit;\n\n    if (!isRoot || !isSplit) {\n      cache[id] = null;\n      delete cache[id];\n    }\n  });\n}\n\n/**\n * Splits a string into an array of words.\n *\n * @param {string} string\n * @param {string | RegExp} [separator = ' ']\n * @return {string[]} Array of words\n */\nfunction toWords(value) {\n  var separator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ' ';\n  var string = value ? String(value) : '';\n  return string.trim().replace(/\\s+/g, ' ').split(separator);\n}\n\n/**\n * Based on lodash#split <https://lodash.com/license>\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters &\n * Editors\n */\nvar rsAstralRange = \"\\\\ud800-\\\\udfff\";\nvar rsComboMarksRange = \"\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe23\";\nvar rsComboSymbolsRange = \"\\\\u20d0-\\\\u20f0\";\nvar rsVarRange = \"\\\\ufe0e\\\\ufe0f\";\n/** Used to compose unicode capture groups. */\n\nvar rsAstral = \"[\".concat(rsAstralRange, \"]\");\nvar rsCombo = \"[\".concat(rsComboMarksRange).concat(rsComboSymbolsRange, \"]\");\nvar rsFitz = \"\\\\ud83c[\\\\udffb-\\\\udfff]\";\nvar rsModifier = \"(?:\".concat(rsCombo, \"|\").concat(rsFitz, \")\");\nvar rsNonAstral = \"[^\".concat(rsAstralRange, \"]\");\nvar rsRegional = \"(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}\";\nvar rsSurrPair = \"[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]\";\nvar rsZWJ = \"\\\\u200d\";\n/** Used to compose unicode regexes. */\n\nvar reOptMod = \"\".concat(rsModifier, \"?\");\nvar rsOptVar = \"[\".concat(rsVarRange, \"]?\");\nvar rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*';\nvar rsSeq = rsOptVar + reOptMod + rsOptJoin;\nvar rsSymbol = \"(?:\".concat([\"\".concat(rsNonAstral).concat(rsCombo, \"?\"), rsCombo, rsRegional, rsSurrPair, rsAstral].join('|'), \"\\n)\");\n/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\n\nvar reUnicode = RegExp(\"\".concat(rsFitz, \"(?=\").concat(rsFitz, \")|\").concat(rsSymbol).concat(rsSeq), 'g');\n/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\n\nvar unicodeRange = [rsZWJ, rsAstralRange, rsComboMarksRange, rsComboSymbolsRange, rsVarRange];\nvar reHasUnicode = RegExp(\"[\".concat(unicodeRange.join(''), \"]\"));\n/**\n * Converts an ASCII `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\n\nfunction asciiToArray(string) {\n  return string.split('');\n}\n/**\n * Checks if `string` contains Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n */\n\n\nfunction hasUnicode(string) {\n  return reHasUnicode.test(string);\n}\n/**\n * Converts a Unicode `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\n\n\nfunction unicodeToArray(string) {\n  return string.match(reUnicode) || [];\n}\n/**\n * Converts `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\n\n\nfunction stringToArray(string) {\n  return hasUnicode(string) ? unicodeToArray(string) : asciiToArray(string);\n}\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values.\n *\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\n\nfunction toString(value) {\n  return value == null ? '' : String(value);\n}\n/**\n * Splits `string` into an array of characters. If `separator` is omitted,\n * it behaves likes split.split('').\n *\n * Unlike native string.split(''), it can split strings that contain unicode\n * characters like emojis and symbols.\n *\n * @param {string} [string=''] The string to split.\n * @param {RegExp|string} [separator=''] The separator pattern to split by.\n * @returns {Array} Returns the string segments.\n * @example\n * toChars('foo');\n * // => ['f', 'o', 'o']\n *\n * toChars('foo bar');\n * // => [\"f\", \"o\", \"o\", \" \", \"b\", \"a\", \"r\"]\n *\n * toChars('f\uD83D\uDE00o');\n * // => ['f', '\uD83D\uDE00', 'o']\n *\n * toChars('f-\uD83D\uDE00-o', /-/);\n * // => ['f', '\uD83D\uDE00', 'o']\n *\n */\n\n\nfunction toChars(string) {\n  var separator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  string = toString(string);\n\n  if (string && isString(string)) {\n    if (!separator && hasUnicode(string)) {\n      return stringToArray(string);\n    }\n  }\n\n  return string.split(separator);\n}\n\n/**\n * Create an HTML element with the the given attributes\n *\n * attributes can include standard HTML attribute, as well as the following\n * \"special\" properties:\n *   - children: HTMLElement | ArrayLike<HTMLElement>\n *   - textContent: string\n *   - innerHTML: string\n *\n * @param {string} name\n * @param  {Object} [attributes]\n * @returns {HTMLElement}\n */\n\nfunction createElement(name, attributes) {\n  var element = document.createElement(name);\n\n  if (!attributes) {\n    // When called without the second argument, its just return the result\n    // of `document.createElement`\n    return element;\n  }\n\n  Object.keys(attributes).forEach(function (attribute) {\n    var rawValue = attributes[attribute];\n    var value = isString(rawValue) ? rawValue.trim() : rawValue; // Ignore attribute if the value is `null` or an empty string\n\n    if (value === null || value === '') return;\n\n    if (attribute === 'children') {\n      // Children can be one or more Elements or DOM strings\n      element.append.apply(element, _toConsumableArray(toArray(value)));\n    } else {\n      // Handle standard HTML attributes\n      element.setAttribute(attribute, value);\n    }\n  });\n  return element;\n}\n\nvar defaults = {\n  splitClass: '',\n  lineClass: 'line',\n  wordClass: 'word',\n  charClass: 'char',\n  types: ['lines', 'words', 'chars'],\n  absolute: false,\n  tagName: 'div'\n};\n\n/**\n * Splits the text content of a single TextNode into words and/or characters.\n *\n * This functions gets called for every text node inside the target element. It\n * replaces the text node with a document fragment containing the split text.\n * Returns an array of the split word and character elements from this node.\n *\n * @param {TextNode} textNode\n * @param {Object} settings\n * @return {{words: Element[], chars: Element[]}}\n */\n\nfunction splitWordsAndChars(textNode, settings) {\n  settings = extend(defaults, settings); // The split types\n\n  var types = parseTypes(settings.types); // the tag name for split text nodes\n\n  var TAG_NAME = settings.tagName; // value of the text node\n\n  var VALUE = textNode.nodeValue; // `splitText` is a wrapper to hold the HTML structure\n\n  var splitText = document.createDocumentFragment(); // Arrays of split word and character elements\n\n  var words = [];\n  var chars = [];\n\n  if (/^\\s/.test(VALUE)) {\n    splitText.append(' ');\n  } // Create an array of wrapped word elements.\n\n\n  words = toWords(VALUE).reduce(function (result, WORD, idx, arr) {\n    // Let `wordElement` be the wrapped element for the current word\n    var wordElement;\n    var characterElementsForCurrentWord; // -> If splitting text into characters...\n\n    if (types.chars) {\n      // Iterate through the characters in the current word\n      characterElementsForCurrentWord = toChars(WORD).map(function (CHAR) {\n        var characterElement = createElement(TAG_NAME, {\n          \"class\": \"\".concat(settings.splitClass, \" \").concat(settings.charClass),\n          style: 'display: inline-block;',\n          children: CHAR\n        });\n        set(characterElement, 'isChar', true);\n        chars = [].concat(_toConsumableArray(chars), [characterElement]);\n        return characterElement;\n      });\n    } // END IF;\n\n\n    if (types.words || types.lines) {\n      // -> If Splitting Text Into Words...\n      //    Create an element to wrap the current word. If we are also\n      //    splitting text into characters, the word element will contain the\n      //    wrapped character nodes for this word. If not, it will contain the\n      //    plain text content (WORD)\n      wordElement = createElement(TAG_NAME, {\n        \"class\": \"\".concat(settings.wordClass, \" \").concat(settings.splitClass),\n        style: \"display: inline-block; \".concat(types.words && settings.absolute ? \"position: relative;\" : ''),\n        children: types.chars ? characterElementsForCurrentWord : WORD\n      });\n      set(wordElement, {\n        isWord: true,\n        isWordStart: true,\n        isWordEnd: true\n      });\n      splitText.appendChild(wordElement);\n    } else {\n      // -> If NOT splitting into words OR lines...\n      //    Append the characters elements directly to splitText.\n      characterElementsForCurrentWord.forEach(function (characterElement) {\n        splitText.appendChild(characterElement);\n      });\n    }\n\n    if (idx < arr.length - 1) {\n      // Add a space after the word.\n      splitText.append(' ');\n    } // If not splitting text into words, we return an empty array\n\n\n    return types.words ? result.concat(wordElement) : result;\n  }, []); // END LOOP;\n  // Add a trailing white space to maintain word spacing\n\n  if (/\\s$/.test(VALUE)) {\n    splitText.append(' ');\n  }\n\n  textNode.replaceWith(splitText);\n  return {\n    words: words,\n    chars: chars\n  };\n}\n\n/**\n * Splits the text content of a target element into words and/or characters.\n * The function is recursive, it will also split the text content of any child\n * elements into words/characters, while preserving the nested elements.\n *\n * @param {Node} node an HTML Element or Text Node\n * @param {Object} setting splitType settings\n */\n\nfunction split(node, settings) {\n  var type = node.nodeType; // Arrays of split words and characters\n\n  var wordsAndChars = {\n    words: [],\n    chars: []\n  }; // Only proceed if `node` is an `Element`, `Fragment`, or `Text`\n\n  if (!/(1|3|11)/.test(type)) {\n    return wordsAndChars;\n  } // A) IF `node` is TextNode that contains characters other than white space...\n  //    Split the text content of the node into words and/or characters\n  //    return an object containing the split word and character elements\n\n\n  if (type === 3 && /\\S/.test(node.nodeValue)) {\n    return splitWordsAndChars(node, settings);\n  } // B) ELSE `node` is an 'Element'\n  //    Iterate through its child nodes, calling the `split` function\n  //    recursively for each child node.\n\n\n  var childNodes = toArray(node.childNodes);\n\n  if (childNodes.length) {\n    set(node, 'isSplit', true); // we need to set a few styles on nested html elements\n\n    if (!get(node).isRoot) {\n      node.style.display = 'inline-block';\n      node.style.position = 'relative'; // To maintain original spacing around nested elements when we are\n      // splitting text into lines, we need to check if the element should\n      // have a space before and after, and store that value for later.\n      // Note: this was necessary to maintain the correct spacing when nested\n      // elements do not align with word boundaries. For example, a nested\n      // element only wraps part of a word.\n\n      var nextSibling = node.nextSibling;\n      var prevSibling = node.previousSibling;\n      var text = node.textContent || '';\n      var textAfter = nextSibling ? nextSibling.textContent : ' ';\n      var textBefore = prevSibling ? prevSibling.textContent : ' ';\n      set(node, {\n        isWordEnd: /\\s$/.test(text) || /^\\s/.test(textAfter),\n        isWordStart: /^\\s/.test(text) || /\\s$/.test(textBefore)\n      });\n    }\n  } // Iterate through child nodes, calling `split` recursively\n  // Returns an object containing all split words and chars\n\n\n  return childNodes.reduce(function (result, child) {\n    var _split = split(child, settings),\n        words = _split.words,\n        chars = _split.chars;\n\n    return {\n      words: [].concat(_toConsumableArray(result.words), _toConsumableArray(words)),\n      chars: [].concat(_toConsumableArray(result.chars), _toConsumableArray(chars))\n    };\n  }, wordsAndChars);\n}\n\n/**\n * Gets the height and position of an element relative to offset parent.\n * Should be equivalent to offsetTop and offsetHeight, but with sub-pixel\n * precision.\n *\n * TODO needs work\n */\nfunction getPosition(node, isWord, settings, scrollPos) {\n  if (!settings.absolute) {\n    return {\n      top: isWord ? node.offsetTop : null\n    };\n  }\n\n  var parent = node.offsetParent;\n\n  var _scrollPos = _slicedToArray(scrollPos, 2),\n      scrollX = _scrollPos[0],\n      scrollY = _scrollPos[1];\n\n  var parentX = 0;\n  var parentY = 0;\n\n  if (parent && parent !== document.body) {\n    var parentRect = parent.getBoundingClientRect();\n    parentX = parentRect.x + scrollX;\n    parentY = parentRect.y + scrollY;\n  }\n\n  var _node$getBoundingClie = node.getBoundingClientRect(),\n      width = _node$getBoundingClie.width,\n      height = _node$getBoundingClie.height,\n      x = _node$getBoundingClie.x,\n      y = _node$getBoundingClie.y;\n\n  var top = y + scrollY - parentY;\n  var left = x + scrollX - parentX;\n  return {\n    width: width,\n    height: height,\n    top: top,\n    left: left\n  };\n}\n\n/**\n * Recursively \"un-splits\" text into words.\n * This is used when splitting text into lines but not words.\n * We initially split the text into words so we can maintain the correct line\n * breaks. Once text has been split into lines, we \"un-split\" the words...\n * @param {Element}\n * @return {void}\n */\n\nfunction unSplitWords(element) {\n  if (!get(element).isWord) {\n    toArray(element.children).forEach(function (child) {\n      return unSplitWords(child);\n    });\n  } else {\n    remove(element);\n    element.replaceWith.apply(element, _toConsumableArray(element.childNodes));\n  }\n}\n\nvar createFragment = function createFragment() {\n  return document.createDocumentFragment();\n};\n\nfunction repositionAfterSplit(element, settings, scrollPos) {\n  var types = parseTypes(settings.types);\n  var TAG_NAME = settings.tagName;\n  var nodes = element.getElementsByTagName('*');\n  var wordsInEachLine = [];\n  var wordsInCurrentLine = [];\n  var lineOffsetY = null;\n  var elementHeight;\n  var elementWidth;\n  var contentBox;\n  var lines = [];\n  /**------------------------------------------------\n   ** GET STYLES AND POSITIONS\n   **-----------------------------------------------*/\n  // There is no built-in way to detect natural line breaks in text (when a\n  // block of text wraps to fit its container). To split text into lines, we\n  // have to detect line breaks by checking the top offset of words. This is\n  // why text was split into words first. To apply absolute\n  // positioning, its also necessary to record the size and position of every\n  // split node (lines, words, characters).\n  // To consolidate DOM getting/settings, this is all done at the same time,\n  // before actually splitting text into lines, which involves restructuring\n  // the DOM again.\n  // Cache the element's parent and next sibling (for DOM removal).\n\n  var parent = element.parentElement;\n  var nextSibling = element.nextElementSibling; // a wrapper for the new HTML structure\n\n  var splitText = createFragment(); // get the computed style object for the element\n\n  var cs = window.getComputedStyle(element);\n  var align = cs.textAlign;\n  var fontSize = parseFloat(cs.fontSize);\n  var lineThreshold = fontSize * 0.2; // IF using absolute position...\n\n  if (settings.absolute) {\n    // Let contentBox be an object containing the width and offset position of\n    // the element's content box (the area inside padding box). This is needed\n    // (for absolute positioning) to set the width and position of line\n    // elements, which have not been created yet.\n    contentBox = {\n      left: element.offsetLeft,\n      top: element.offsetTop,\n      width: element.offsetWidth\n    }; // Let elementWidth and elementHeight be the actual width/height of the\n    // element. Also check if the element has inline height or width styles\n    // already set. If it does, cache those values for later.\n\n    elementWidth = element.offsetWidth;\n    elementHeight = element.offsetHeight; // Store the original inline height and width of the element\n\n    set(element, {\n      cssWidth: element.style.width,\n      cssHeight: element.style.height\n    });\n  } // Iterate over every node in the target element\n\n\n  toArray(nodes).forEach(function (node) {\n    // node is a word element or custom html element\n    var isWordLike = node.parentElement === element; // TODO needs work\n    // Get te size and position of split text nodes\n\n    var _getPosition = getPosition(node, isWordLike, settings, scrollPos),\n        width = _getPosition.width,\n        height = _getPosition.height,\n        top = _getPosition.top,\n        left = _getPosition.left; // If element is a `<br>` tag return here\n\n\n    if (/^br$/i.test(node.nodeName)) return;\n\n    if (types.lines && isWordLike) {\n      // We compare the top offset of the current word to the top offset of\n      // previous words on the current line. If the difference is greater than\n      // our defined threshold (20%), we assume this word is on a new line.\n      if (lineOffsetY === null || top - lineOffsetY >= lineThreshold) {\n        lineOffsetY = top;\n        wordsInEachLine.push(wordsInCurrentLine = []);\n      } // Add the current word node to the line array\n\n\n      wordsInCurrentLine.push(node);\n    } // END IF\n\n\n    if (settings.absolute) {\n      // Store the size and position split text nodes\n      set(node, {\n        top: top,\n        left: left,\n        width: width,\n        height: height\n      });\n    }\n  }); // END LOOP\n  // Remove the element from the DOM\n\n  if (parent) {\n    parent.removeChild(element);\n  }\n  /**------------------------------------------------\n   ** SPLIT LINES\n   **-----------------------------------------------*/\n\n\n  if (types.lines) {\n    // Iterate over lines of text (see 11 b)\n    // Let `line` be the array of words in the current line.\n    // Return an array of the wrapped line elements (lineElements)\n    lines = wordsInEachLine.map(function (wordsInThisLine) {\n      // Create an element to wrap the current line.\n      var lineElement = createElement(TAG_NAME, {\n        \"class\": \"\".concat(settings.splitClass, \" \").concat(settings.lineClass),\n        style: \"display: block; text-align: \".concat(align, \"; width: 100%;\")\n      });\n      set(lineElement, 'isLine', true);\n      var lineDimensions = {\n        height: 0,\n        top: 1e4\n      }; // Append the `lineElement` to `container`\n\n      splitText.appendChild(lineElement); // Iterate over the word-level elements in the current line.\n      // Note: wordOrElement can either be a word node or nested element\n\n      wordsInThisLine.forEach(function (wordOrElement, idx, arr) {\n        var _data$get = get(wordOrElement),\n            isWordEnd = _data$get.isWordEnd,\n            top = _data$get.top,\n            height = _data$get.height;\n\n        var next = arr[idx + 1]; // Determine line height / y-position\n        // we use the height and offsetTop of the words which we already\n        // recorded. Because custom nested elements could have their own\n        // styles, the words on a line may not all be the same height or\n        // y position. So we take the greatest height / y - offset of the\n        // words on this line.\n\n        lineDimensions.height = Math.max(lineDimensions.height, height);\n        lineDimensions.top = Math.min(lineDimensions.top, top); // append the current word/element\n\n        lineElement.appendChild(wordOrElement); // Determine if there should space after the current element...\n        // If this is not the last word on the current line.\n        // TODO - logic for handing spacing can be improved\n\n        if (isWordEnd && get(next).isWordStart) {\n          lineElement.append(' ');\n        }\n      }); // END LOOP\n\n      if (settings.absolute) {\n        set(lineElement, {\n          height: lineDimensions.height,\n          top: lineDimensions.top\n        });\n      }\n\n      return lineElement;\n    }); // END LOOP\n\n    if (!types.words) {\n      unSplitWords(splitText);\n    } // 10. Insert the new container\n\n\n    element.replaceChildren(splitText);\n  }\n  /**------------------------------------------------\n   **  SET ABSOLUTE POSITION\n   **-----------------------------------------------*/\n  // Apply absolute positioning to all child elements of the target element.\n  // This includes split lines, words, chars, and custom HTML elements that were\n  // included by the user. The size and position of child elements has already\n  // been recorded before splitting text into lines.\n\n\n  if (settings.absolute) {\n    // Set the width/height of the parent element so it does not collapse\n    // when its children are set to absolute position.\n    element.style.width = \"\".concat(element.style.width || elementWidth, \"px\");\n    element.style.height = \"\".concat(elementHeight, \"px\"); // Iterate over all child elements\n\n    toArray(nodes).forEach(function (node) {\n      var _data$get2 = get(node),\n          isLine = _data$get2.isLine,\n          top = _data$get2.top,\n          left = _data$get2.left,\n          width = _data$get2.width,\n          height = _data$get2.height;\n\n      var parentData = get(node.parentElement);\n      var isChildOfLineNode = !isLine && parentData.isLine; // Set the top position of the current node.\n      // -> If `node` a line element, we use the top offset of its first child\n      // -> If `node` the child of line element, then its top offset is zero\n\n      node.style.top = \"\".concat(isChildOfLineNode ? top - parentData.top : top, \"px\"); // Set the left position of the current node.\n      // -> IF `node` is a line element, this is equal to the position left of\n      //    the content box of the parent element\n      // -> IF `node` is the child of a line element, the value has to adjusted\n      //    so its relative to the line element\n\n      node.style.left = isLine ? \"\".concat(contentBox.left, \"px\") : \"\".concat(left - (isChildOfLineNode ? contentBox.left : 0), \"px\"); // Set the height of the current node to the cached value.\n\n      node.style.height = \"\".concat(height, \"px\"); //  Set the width of the current node.\n      //  If its a line element, width is equal to the width of the contentBox.\n\n      node.style.width = isLine ? \"\".concat(contentBox.width, \"px\") : \"\".concat(width, \"px\"); // Finally, set the node's position to absolute.\n\n      node.style.position = 'absolute';\n    });\n  } // end if;\n  // 14. Re-attach the element to the DOM\n\n\n  if (parent) {\n    if (nextSibling) parent.insertBefore(element, nextSibling);else parent.appendChild(element);\n  }\n\n  return lines;\n}\n\nvar _defaults = extend(defaults, {});\n\nvar SplitType = /*#__PURE__*/function () {\n  _createClass(SplitType, null, [{\n    key: \"clearData\",\n\n    /**\n     * CLears all data\n     */\n    value: function clearData() {\n      clear();\n    }\n    /**\n     * The default settings for all splitType instances\n     * @static\n     */\n\n  }, {\n    key: \"setDefaults\",\n\n    /**\n     * Sets the default settings for all SplitType instances.\n     * The provided object will be merged with the existing defaults objects.\n     *\n     * @param {Object} settings an object containing the settings to override\n     * @returns {Object} the new default settings\n     * @public\n     * @static\n     * @example\n     * SplitType.setDefaults({ \"position\": \"absolute\" })\n     */\n    value: function setDefaults(options) {\n      _defaults = extend(_defaults, parseSettings(options));\n      return defaults;\n    }\n    /**\n     * Revert target elements to their original html content\n     * Has no effect on that\n     *\n     * @param {any} elements The target elements to revert. One of:\n     *  - {string} A css selector\n     *  - {HTMLElement} A single element\n     * -  {NodeList} A NodeList or collection\n     *  - {HTMLElement[]} An array of Elements\n     * -  {Array<HTMLElement|NodeList|HTMLElement[]>} A nested array of elements\n     * @static\n     */\n\n  }, {\n    key: \"revert\",\n    value: function revert(elements) {\n      getTargetElements(elements).forEach(function (element) {\n        var _data$get = get(element),\n            isSplit = _data$get.isSplit,\n            html = _data$get.html,\n            cssWidth = _data$get.cssWidth,\n            cssHeight = _data$get.cssHeight;\n\n        if (isSplit) {\n          element.innerHTML = html;\n          element.style.width = cssWidth || '';\n          element.style.height = cssHeight || '';\n          remove(element);\n        }\n      });\n    }\n    /**\n     * Creates a new SplitType instance\n     * This static method provides a way to create a `SplitType` instance without\n     * using the `new` keyword.\n     *\n     * @param {any} target The target elements to split. One of:\n     *  - {string} A css selector\n     *  - {HTMLElement} A single element\n     * -  {NodeList} A NodeList or collection\n     *  - {HTMLElement[]} An array of Elements\n     * -  {Array<HTMLElement|NodeList|HTMLElement[]>} A nested array of elements\n     * @param {Object} [options] Settings for the SplitType instance\n     * @return {SplitType} the SplitType instance\n     * @static\n     */\n\n  }, {\n    key: \"create\",\n    value: function create(target, options) {\n      return new SplitType(target, options);\n    }\n    /**\n     * Creates a new `SplitType` instance\n     *\n     * @param {any} elements The target elements to split. One of:\n     *  - {string} A css selector\n     *  - {HTMLElement} A single element\n     * -  {NodeList} A NodeList or collection\n     *  - {HTMLElement[]} An array of Elements\n     * -  {Array<HTMLElement|NodeList|HTMLElement[]>} A nested array of elements\n     * @param {Object} [options] Settings for the SplitType instance\n     */\n\n  }, {\n    key: \"data\",\n\n    /**\n     * The internal data store\n     */\n    get: function get() {\n      return cache;\n    }\n  }, {\n    key: \"defaults\",\n    get: function get() {\n      return _defaults;\n    }\n    /**\n     * Sets the default settings for all SplitType instances.\n     *\n     * Setting `SplitType.defaults` to an object will merge that object with the\n     * existing defaults.\n     *\n     * @param {Object} settings an object containing the settings to override\n     * @deprecated\n     * @static\n     * @example\n     * SplitType.defaults = { \"position\": \"absolute\" }\n     */\n    ,\n    set: function set(options) {\n      _defaults = extend(_defaults, parseSettings(options));\n    }\n  }]);\n\n  function SplitType(elements, options) {\n    _classCallCheck(this, SplitType);\n\n    this.isSplit = false;\n    this.settings = extend(_defaults, parseSettings(options));\n    this.elements = getTargetElements(elements); // Start the split process\n\n    this.split();\n  }\n  /**\n   * Splits the text in all target elements. This method is called\n   * automatically when a new SplitType instance is created. It can also be\n   * called manually to re-split text with new options.\n   * @param {Object} options\n   * @public\n   */\n\n\n  _createClass(SplitType, [{\n    key: \"split\",\n    value: function split$1(options) {\n      var _this = this;\n\n      // Revert target elements (if they are already split)\n      // Note: revert was already called once in the constructor. However, we\n      // need to call it again here so text is reverted when the user manually\n      // calls the `split` method to re-split text.\n      this.revert(); // Store the original html content of each target element\n\n      this.elements.forEach(function (element) {\n        set(element, 'html', element.innerHTML);\n      }); // Create arrays to hold the split lines, words, and characters\n\n      this.lines = [];\n      this.words = [];\n      this.chars = []; // cache vertical scroll position before splitting\n\n      var scrollPos = [window.pageXOffset, window.pageYOffset]; // If new options were passed into the `split()` method, update settings\n\n      if (options !== undefined) {\n        this.settings = extend(this.settings, parseSettings(options));\n      }\n\n      var types = parseTypes(this.settings.types); // If the `types` option is set to an empty array, text will not be split.\n      // @example new SplitType('#target', { types: [] })\n\n      if (types.none) {\n        return;\n      } // Split text in each target element\n\n\n      this.elements.forEach(function (element) {\n        // Add the split text nodes from this element to the arrays of all split\n        // text nodes for this instance.\n        set(element, 'isRoot', true);\n\n        var _split2 = split(element, _this.settings),\n            words = _split2.words,\n            chars = _split2.chars;\n\n        _this.words = [].concat(_toConsumableArray(_this.words), _toConsumableArray(words));\n        _this.chars = [].concat(_toConsumableArray(_this.chars), _toConsumableArray(chars));\n      });\n      this.elements.forEach(function (element) {\n        if (types.lines || _this.settings.absolute) {\n          var lines = repositionAfterSplit(element, _this.settings, scrollPos);\n          _this.lines = [].concat(_toConsumableArray(_this.lines), _toConsumableArray(lines));\n        }\n      }); // Set isSplit to true for the SplitType instance\n\n      this.isSplit = true; // Set scroll position to cached value.\n\n      window.scrollTo(scrollPos[0], scrollPos[1]); // Clean up stored data\n\n      cleanup();\n    }\n    /**\n     * Reverts target element(s) back to their original html content\n     * Deletes all stored data associated with the target elements\n     * Resets the properties on the splitType instance\n     *\n     * @public\n     */\n\n  }, {\n    key: \"revert\",\n    value: function revert() {\n      if (this.isSplit) {\n        // Reset instance properties if necessary\n        this.lines = null;\n        this.words = null;\n        this.chars = null;\n        this.isSplit = false;\n      }\n\n      SplitType.revert(this.elements);\n    }\n  }]);\n\n  return SplitType;\n}();\n\nexport { SplitType as default };\n", "import { animate, inView, stagger } from \"motion\";\nimport SplitType from 'split-type';\n\n\nif (window.innerWidth > 991) {\n\n    const achievementBLock = document.querySelectorAll('.achievement-tile');\n\n    achievementBLock.forEach((block, index) => {\n        block.style.opacity = 0;\n    });\n\n    inView(\".div-block-9\", (_) => {\n        animate( \".achievement-tile\", { opacity: [ 1] , y: [40, 0] }, { delay: stagger(0.3), duration: 1});\n    });\n\n\n    const blocks = document.querySelectorAll('.text-block-4');\n\n    // \u0418\u0442\u0435\u0440\u0438\u0440\u0443\u0435\u043C \u0447\u0435\u0440\u0435\u0437 \u043A\u0430\u0436\u0434\u044B\u0439 \u0431\u043B\u043E\u043A\n    blocks.forEach((block) => {\n        // \u041F\u0440\u0438\u043C\u0435\u043D\u044F\u0435\u043C \u0444\u0443\u043D\u043A\u0446\u0438\u044E inView \u043A \u043A\u0430\u0436\u0434\u043E\u043C\u0443 \u0431\u043B\u043E\u043A\u0443 \u043E\u0442\u0434\u0435\u043B\u044C\u043D\u043E\n        inView(block, (_) => {\n            // \u0418\u043D\u0438\u0446\u0438\u0430\u043B\u0438\u0437\u0438\u0440\u0443\u0435\u043C SplitType \u0434\u043B\u044F \u0442\u0435\u043A\u0443\u0449\u0435\u0433\u043E \u0431\u043B\u043E\u043A\u0430\n            const text = new SplitType(block);\n            text.lines.forEach((line, index) => {\n                // \u0410\u043D\u0438\u043C\u0438\u0440\u0443\u0435\u043C \u043A\u0430\u0436\u0434\u0443\u044E \u043B\u0438\u043D\u0438\u044E \u0441 \u0443\u0447\u0435\u0442\u043E\u043C \u0438\u043D\u0434\u0438\u0432\u0438\u0434\u0443\u0430\u043B\u044C\u043D\u043E\u0439 \u0437\u0430\u0434\u0435\u0440\u0436\u043A\u0438 \u0438 \u043F\u0440\u043E\u0434\u043E\u043B\u0436\u0438\u0442\u0435\u043B\u044C\u043D\u043E\u0441\u0442\u0438\n                animate(line, { opacity: [0, 1], y: [40, 0] }, { delay: 0.2 + index * 0.2, duration: 0.4 });\n            });\n        });\n    });\n\n    inView(\".main-block\", (_) => {\n        const text = new SplitType('.main-title-animation');\n        text.lines.forEach((line, index) => {\n            animate( line, { opacity: [0, 1] , y: [40, 0] }, { delay: 0.2 + index * 0.2, duration: 0.8});\n        });\n    });\n\n    inView(\".about-company-block\", (_) => {\n        const text = new SplitType('.title-about-company');\n        text.lines.forEach((line, index) => {\n            animate( line, { opacity: [0, 1] , y: [40, 0] }, { delay: 0.2 + index * 0.2, duration: 0.8});\n        });\n    });\n\n    inView(\".team-block\", (_) => {\n        const text = new SplitType('.team-block-title');\n        text.lines.forEach((line, index) => {\n            animate( line, { opacity: [0, 1] , y: [40, 0] }, { delay: 0.2 + index * 0.2, duration: 0.8});\n        });\n    });\n\n    inView(\".contact-block\", (_) => {\n        const text = new SplitType('.contact-title');\n        text.lines.forEach((line, index) => {\n            animate( line, { opacity: [0, 1] , y: [40, 0] }, { delay: 0.2 + index * 0.2, duration: 0.8});\n        });\n    });\n\n\n    const items = document.querySelectorAll('.service-card-cms ');\n    let columns = window.innerWidth > 1279 ? 3 : 2; // 3 \u043A\u043E\u043B\u043E\u043D\u043A\u0438 \u0434\u043B\u044F \u0448\u0438\u0440\u043E\u043A\u0438\u0445 \u044D\u043A\u0440\u0430\u043D\u043E\u0432, 2 \u0434\u043B\u044F \u0443\u0437\u043A\u0438\u0445\n    const delayPerItem = 0.2; // \u0417\u0430\u0434\u0435\u0440\u0436\u043A\u0430 \u043C\u0435\u0436\u0434\u0443 \u0430\u043D\u0438\u043C\u0430\u0446\u0438\u044F\u043C\u0438\n    const row = Math.ceil(items.length / columns);\n    const rows = new Array(row).fill().map(() => []);\n\n\n    items.forEach((item, index) => {\n        item.style.opacity = 0; // \u0423\u0441\u0442\u0430\u043D\u0430\u0432\u043B\u0438\u0432\u0430\u0435\u043C \u043D\u0430\u0447\u0430\u043B\u044C\u043D\u043E\u0435 \u0437\u043D\u0430\u0447\u0435\u043D\u0438\u0435 \u043F\u0440\u043E\u0437\u0440\u0430\u0447\u043D\u043E\u0441\u0442\u0438\n        const currentRow = index % row;\n        rows[currentRow].push({item}); // \u0414\u043E\u0431\u0430\u0432\u043B\u044F\u0435\u043C \u044D\u043B\u0435\u043C\u0435\u043D\u0442 \u0432 \u0441\u043E\u043E\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044E\u0449\u0443\u044E \u0441\u0442\u0440\u043E\u043A\u0443\n    });\n\n\n    rows.forEach((currentRow) => {\n        inView(currentRow[0].item, (_) => {\n            currentRow.forEach((element , indexRow) => {\n                animate( element.item, { opacity: [1] , y: [40, 0] }, { delay: delayPerItem * indexRow, duration: 0.5});\n            });\n\n        });\n    })\n}\n\n\n\n\n"],
  "mappings": "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",
  "names": ["addUniqueItem", "array", "item", "clamp", "min", "max", "v", "defaults", "isNumber", "value", "isEasingList", "easing", "isNumber", "wrap", "min", "max", "v", "rangeSize", "getEasingForSegment", "easing", "i", "isEasingList", "wrap", "mix", "min", "max", "progress", "noop", "noopReturn", "v", "progress", "min", "max", "value", "fillOffset", "offset", "remaining", "min", "i", "offsetProgress", "progress", "mix", "defaultOffset", "length", "interpolate", "output", "input", "defaultOffset", "easing", "noopReturn", "length", "remainder", "fillOffset", "t", "i", "progressInRange", "clamp", "progress", "getEasingForSegment", "mix", "isCubicBezier", "easing", "isNumber", "isEasingGenerator", "easing", "isFunction", "value", "isString", "value", "time", "seconds", "milliseconds", "calcBezier", "a1", "a2", "subdivisionPrecision", "subdivisionMaxIterations", "binarySubdivide", "x", "lowerBound", "upperBound", "mX1", "mX2", "currentX", "currentT", "i", "cubicBezier", "mY1", "mY2", "noopReturn", "getTForX", "aX", "t", "steps", "direction", "progress", "expanded", "rounded", "clamp", "namedEasings", "cubicBezier", "functionArgsRegex", "getEasingFunction", "definition", "isFunction", "isCubicBezier", "args", "argsArray", "steps", "noopReturn", "Animation", "output", "keyframes", "easing", "initialDuration", "defaults", "delay", "endDelay", "repeat", "offset", "direction", "autoplay", "noopReturn", "resolve", "reject", "isEasingGenerator", "custom", "isEasingList", "getEasingFunction", "interpolate$1", "interpolate", "timestamp", "_a", "t", "progress", "currentIteration", "iterationProgress", "iterationIsOdd", "p", "latest", "now", "duration", "rate", "invariant", "MotionValue", "animation", "data", "getAnimationData", "element", "getMotionValue", "motionValues", "name", "MotionValue", "axes", "order", "transformAlias", "rotation", "v", "baseTransformProperties", "noopReturn", "transformDefinitions", "asTransformCssVar", "name", "transforms", "axis", "compareTransformOrder", "a", "b", "transformLookup", "isTransform", "addTransformToElement", "element", "getAnimationData", "addUniqueItem", "buildTransformTemplate", "transformListToString", "template", "isCssVar", "name", "registeredProperties", "registerCssVariable", "syntax", "initialValue", "transformDefinitions", "testAnimation", "keyframes", "options", "featureTests", "results", "supports", "key", "resolution", "generateLinearEasingPoints", "easing", "duration", "points", "numPoints", "progress", "convertEasing", "isFunction", "supports", "defaults", "isCubicBezier", "cubicBezierAsString", "a", "b", "c", "d", "hydrateKeyframes", "keyframes", "readInitialValue", "i", "keyframesList", "getStyleName", "key", "transformAlias", "isTransform", "asTransformCssVar", "style", "element", "name", "getStyleName", "value", "isCssVar", "definition", "transformDefinitions", "stopAnimation", "animation", "needsCommit", "getUnitConverter", "keyframes", "definition", "_a", "toUnit", "noopReturn", "finalKeyframe", "isString", "unit", "value", "getDevToolsRecord", "animateStyle", "element", "key", "keyframesDefinition", "options", "AnimationPolyfill", "record", "isRecording", "animation", "duration", "defaults", "delay", "endDelay", "repeat", "easing", "persist", "direction", "offset", "allowWebkitAcceleration", "autoplay", "data", "getAnimationData", "valueIsTransform", "isTransform", "canAnimateNatively", "supports", "addTransformToElement", "name", "getStyleName", "motionValue", "getMotionValue", "definition", "transformDefinitions", "stopAnimation", "isEasingGenerator", "readInitialValue", "_a", "_b", "style", "keyframes", "hydrateKeyframes", "keyframesList", "toUnit", "getUnitConverter", "custom", "isCssVar", "registerCssVariable", "isFunction", "isEasingList", "value", "isNumber", "animationOptions", "time", "convertEasing", "thisEasing", "resolve", "reject", "target", "noop", "latest", "getOptions", "options", "key", "resolveElements", "elements", "selectorCache", "_a", "createAnimation", "factory", "withControls", "animationFactory", "options", "duration", "defaults", "controls", "getActiveAnimation", "state", "target", "key", "activeAnimation", "time", "selectFinished", "noop", "animation", "stopAnimation", "callback", "value", "i", "stagger", "duration", "start", "from", "easing", "total", "fromIndex", "isNumber", "getFromIndex", "distance", "delay", "maxDelay", "getEasingFunction", "lastIndex", "resolveOption", "option", "i", "isFunction", "createAnimate", "AnimatePolyfill", "elements", "keyframes", "options", "resolveElements", "numElements", "invariant", "animationFactories", "i", "element", "key", "valueOptions", "getOptions", "resolveOption", "animation", "animateStyle", "withControls", "animate", "createAnimate", "Animation", "thresholds", "inView", "elementOrSelector", "onStart", "root", "rootMargin", "amount", "elements", "resolveElements", "activeIntersections", "onIntersectionChange", "entries", "entry", "onEnd", "newOnEnd", "isFunction", "observer", "element", "animateProgress", "target", "options", "withControls", "animation", "Animation", "animate", "keyframesOrOptions", "isFunction", "append", "length", "node", "replaceChildren", "replaceWith", "parent", "_len", "nodes", "_key", "i", "_classCallCheck", "instance", "Constructor", "_defineProperties", "target", "props", "descriptor", "_createClass", "protoProps", "staticProps", "_defineProperty", "obj", "key", "value", "ownKeys", "object", "enumerableOnly", "keys", "symbols", "sym", "_objectSpread2", "source", "_slicedToArray", "arr", "_arrayWithHoles", "_iterableToArrayLimit", "_unsupportedIterableToArray", "_nonIterableRest", "_toConsumableArray", "_arrayWithoutHoles", "_iterableToArray", "_nonIterableSpread", "_arrayLikeToArray", "iter", "_arr", "_n", "_d", "_e", "_i", "_s", "err", "o", "minLen", "n", "len", "arr2", "extend", "extended", "currentValue", "newValue", "isString", "isArray", "parseSettings", "settings", "types", "type", "parseTypes", "isObject", "isNode", "input", "isLength", "isArrayLike", "toArray", "getTargetElements", "elements", "result", "element", "entries", "expando", "cache", "uid", "set", "owner", "id", "data", "get", "remove", "clear", "cleanup", "_ref", "_ref2", "_ref2$", "isRoot", "isSplit", "toWords", "separator", "string", "rsAstralRange", "rsComboMarksRange", "rsComboSymbolsRange", "rsVarRange", "rsAstral", "rsCombo", "rsFitz", "rsModifier", "rsNonAstral", "rsRegional", "rsSurrPair", "rsZWJ", "reOptMod", "rsOptVar", "rsOptJoin", "rsSeq", "rsSymbol", "reUnicode", "unicodeRange", "reHasUnicode", "asciiToArray", "hasUnicode", "unicodeToArray", "stringToArray", "toString", "toChars", "createElement", "name", "attributes", "attribute", "rawValue", "defaults", "splitWordsAndChars", "textNode", "TAG_NAME", "VALUE", "splitText", "words", "chars", "WORD", "idx", "wordElement", "characterElementsForCurrentWord", "CHAR", "characterElement", "split", "wordsAndChars", "childNodes", "nextSibling", "prevSibling", "text", "textAfter", "textBefore", "child", "_split", "getPosition", "isWord", "scrollPos", "_scrollPos", "scrollX", "scrollY", "parentX", "parentY", "parentRect", "_node$getBoundingClie", "width", "height", "x", "y", "top", "left", "unSplitWords", "createFragment", "repositionAfterSplit", "wordsInEachLine", "wordsInCurrentLine", "lineOffsetY", "elementHeight", "elementWidth", "contentBox", "lines", "cs", "align", "fontSize", "lineThreshold", "isWordLike", "_getPosition", "wordsInThisLine", "lineElement", "lineDimensions", "wordOrElement", "_data$get", "isWordEnd", "next", "_data$get2", "isLine", "parentData", "isChildOfLineNode", "_defaults", "SplitType", "options", "html", "cssWidth", "cssHeight", "_this", "_split2", "block", "index", "inView", "_", "animate", "stagger", "SplitType", "line", "items", "columns", "delayPerItem", "row", "rows", "item", "currentRow", "element", "indexRow"]
}
